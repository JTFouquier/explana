
# CONFIG FILE WITH EXAMPLE
##############################################################################

# Example: merging three datasets to identify features that relate to HDL
# Distances between samples are also included when creating delta datasets
# Config file prevents users from having to type a long command and they can
# plan analysis better
##############################################################################

# REQUIRED COLUMNS: StudyID (random effect), SampleID, & Timepoint
##############################################################################
random_effect: "StudyID"
sample_id: "SampleID"

# Analysis details
# TODO there are issues with keeping html output in same folder... fix later
##############################################################################
out: "random-forest/TEST/HDL-Demo/"
report_name: "HDL-Demo.html"

response_var: "HDL" # Variable you are trying to explain
drop_rows: "c('SexualClassification'='Women')"
constrain_rows: "c('Diet'='Agrarian')"
drop_cols: "c('Inflammation', 'TotalCholesterol', 'PCA', 'HOMAIR')"
constrain_cols: "c()"

# make interactive output of dataframes for interpretation (TRUE or FALSE)
build_datatable: "TRUE"

# Mixed-effects Random Forest (MERF) arguments
##############################################################################
# For analysis
iterations: "20"
n_estimators: "300"

# For testing (doing too few even for testing may cause failure)
#iterations: "5"
#n_estimators: "50"

# BorutaSHAP arguments
##############################################################################
borutaSHAP_trials: "20"
borutaSHAP_percentile: "98"

# When creating deltas, are there distance matrices to include?
##############################################################################
distance_matrices: "list(unweighted_unifrac_dm='data/hdl-test/distance-matrix-\
hdl.tsv',weighted_unifrac_dm='data/hdl-test/distance-matrix-hdl.tsv',\
bray_curtis_dm='data/hdl-test/distance-matrix-hdl.tsv')"

# PCA parameter lists
##############################################################################
# For all datasets you wish to perform PCA on, you must provide a list of lists
# Must include: pca_name (string), feature_list (c() vector),
# cum_var_thres (select dims that explain at least a certain percent variance
# Suggest naming PCA something like PCA_metabolic for interpretation

metadata_pca_list: "list(list(pca_name='PCA_metabolic',feature_list=
c('Triglycerides','LDL','Leptin','Adiponectin','Insulin','Glucose'),
cum_var_thres=70),list(pca_name='PCA_bacteria_test',feature_list=
c('Bact','Prev'),cum_var_thres=70))"

# All datasets used for analysis are included with the option to perform
# dimensionality reduction on them individually
# suggest naming each dataset clearly to improve interpretation (i.e. elisa,
# cytof, 'asvs', etc.)
# METHODS are: 'pca', 'scnic' or 'None'
#https://codebeautify.org/jsonviewer
##############################################################################

dataset_json: '{
  "datasets": {
    "metadata": {
      "file_path": "data/hdl-test/real-data-no-asvs.txt",
      "dim_method": "pca",
      "param_dict": {
        "pca_groups_list": "metadata_pca_list"
      }
    },
    "asvs": {
      "file_path": "data/hdl-test/real-feature-table.biom",
      "dim_method": "scnic",
      "param_dict": {
        "method": "spearman",
        "min_r": "0.35"
      }
    },
    "fake": {
      "file_path": "data/hdl-test/fake-demographics.txt",
      "dim_method": "None",
      "param_dict": {}
    }
  }
}'